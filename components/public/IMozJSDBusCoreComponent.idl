/*
 * IMozJSDBusCoreComponent.idl: 
 *
 * Authors:
 *   Eric Butler <eric@extremeboredom.net>
 *
 *  This file is part of mozjs-dbus.
 *
 *  mozjs-dbus is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  mozjs-dbus is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with mozjs-dbus.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#include "nsISupports.idl"
#include "nsIPropertyBag.idl"

// From http://blog.xiaoduo.info/?p=38
[scriptable, uuid(c7c71679-bf75-4722-ad82-8e779fc54f7f)]
interface ISignalCallback : nsISupports
{
  boolean method(in PRUint32 aData);
};

[function, scriptable, uuid(efc733cd-6288-45af-a12c-51cc064fadeb)]
interface IMethodHandler : nsISupports
{
  nsIVariant method(in string interfaceName,
                    in string methodName,
		    [array, size_is(argsLength)]
		    in nsIVariant args,
		    in unsigned long argsLength);
};

[scriptable, uuid(90758a97-a6f3-4ea4-8953-16bd2ee3a977)]
interface IMozJSDBusCoreComponent : nsISupports
{
  nsIVariant CallMethod(in ACString busName,
                        in ACString serviceName,
                        in ACString objectPath,
			in ACString interfaceName,
			in ACString methodName,
			in unsigned long argsLength,
			[array, size_is(argsLength)]
			in nsIVariant args);

  void ConnectToSignal(in ACString busName,
                       in ACString serviceName,
                       in ACString objectPath,
                       in ACString interfaceName,
                       in ACString signalName,
                       in ISignalCallback callback);
    
  boolean RequestService(in ACString busName,
                         in ACString serviceName);
  
  void RegisterObject(in ACString busName,
                      in ACString objectPath,
		      in IMethodHandler callback);
};

